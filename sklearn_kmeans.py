# -*- coding: utf-8 -*-
"""SKlearn-kmeans.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bdjgMfC8Ek2vV1fYFvfRa8c20kkif8B4
"""

import matplotlib.pyplot as plt
from sklearn.datasets import make_blobs
from sklearn.cluster import KMeans

X,y = make_blobs(
    n_samples=250, n_features=2,
    centers=4, cluster_std=2,
    shuffle=True, random_state=0
)

# 繪製原始數據點
plt.scatter(X[:, 0], X[:, 1], s=50, c='black', marker='o', edgecolor='gray', label='Data Points')

# 添加圖例和網格，然後顯示圖形
plt.legend(scatterpoints=1)
plt.grid()
plt.show()

# print(X)
print(X[:0])
print(X[:1])
print(type(X))

print(X.shape)
print(y.shape)

km = KMeans(n_clusters=4, init='random', n_init=10, max_iter=300,
            tol=1e-04, random_state=0)

"""|n-cluster |	分类簇的数量|
|-|-|
|max_iter |	最大迭代次數|
|n_init |	用不同的中心當作開始的運行次數|
|tol| 中心收斂的閥值，中心改變比tol小就結束|
|random_state |隨機種子|
"""

y_km = km.fit_predict(X)
print(y_km)
print(type(y_km))

# Draw the 3 clusters
plt.scatter( X[y_km == 0, 0], X[y_km == 0, 1], s=50, c='lightgreen', marker='s', edgecolor='gray', label='cluster 1')
plt.scatter( X[y_km == 1, 0], X[y_km == 1, 1], s=50, c='orange', marker='o', edgecolor='gray', label='cluster 2')
plt.scatter( X[y_km == 2, 0], X[y_km == 2, 1], s=50, c='lightblue', marker='v', edgecolor='gray', label='cluster 3')
# Draw the centroids
plt.scatter(
km.cluster_centers_[:, 0], km.cluster_centers_[:, 1], s=250, marker='*', c='red', edgecolor='gray', label='centroids'
)
plt.legend(scatterpoints=1)
plt.grid()
plt.show()